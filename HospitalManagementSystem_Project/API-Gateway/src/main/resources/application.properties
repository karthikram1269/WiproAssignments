spring.application.name=API-Gateway
server.port=8765

spring.config.import=optional:configserver:http://localhost:9094

# ===============================
# SPRINGDOC SWAGGER CONFIGURATION
# ===============================

# Custom path for Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html

# Custom path for API Docs
#springdoc.api-docs.path=/api-docs

# Enable Swagger UI
springdoc.swagger-ui.enabled=true

# Enable API docs
springdoc.api-docs.enabled=true

# Show all actuator endpoints in Swagger (if actuator is used)
springdoc.show-actuator=true

# Packages to scan for APIs (comma separated if multiple)
springdoc.packages-to-scan=com.example.apigateway.controller

# Base paths (all APIs under these will be included)
springdoc.paths-to-match=/**

# ===============================
# LOGGING (Optional, for debugging)
# ===============================
logging.level.org.springdoc=DEBUG
logging.level.org.springframework.web=DEBUG

# ===============================
# Eureka Config
# ===============================
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# ===============================
# Gateway Routes (Services APIs)
# ===============================
spring.cloud.gateway.server.webflux.routes[0].id=patient-service-route
spring.cloud.gateway.server.webflux.routes[0].uri=lb://PATIENT-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/v1/patients/**

spring.cloud.gateway.server.webflux.routes[1].id=doctor-service-route
spring.cloud.gateway.server.webflux.routes[1].uri=lb://DOCTOR-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/v1/doctors/**

spring.cloud.gateway.server.webflux.routes[2].id=appointment-service-route
spring.cloud.gateway.server.webflux.routes[2].uri=lb://APPOINTMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/v1/appointments/**

spring.cloud.gateway.server.webflux.routes[3].id=medical-record-service-route
spring.cloud.gateway.server.webflux.routes[3].uri=lb://MEDICAL-RECORD-SERVICE
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/api/v1/records/**

spring.cloud.gateway.server.webflux.routes[4].id=payment-service-route
spring.cloud.gateway.server.webflux.routes[4].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/api/v1/payments/**

# ===============================
# Gateway Routes (Swagger Docs)
# ===============================
spring.cloud.gateway.server.webflux.routes[5].id=patient-service-swagger
spring.cloud.gateway.server.webflux.routes[5].uri=lb://PATIENT-SERVICE
spring.cloud.gateway.server.webflux.routes[5].predicates[0]=Path=/api/v1/patients/v3/api-docs

spring.cloud.gateway.server.webflux.routes[6].id=doctor-service-swagger
spring.cloud.gateway.server.webflux.routes[6].uri=lb://DOCTOR-SERVICE
spring.cloud.gateway.server.webflux.routes[6].predicates[0]=Path=/api/v1/doctors/v3/api-docs

spring.cloud.gateway.server.webflux.routes[7].id=appointment-service-swagger
spring.cloud.gateway.server.webflux.routes[7].uri=lb://APPOINTMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[7].predicates[0]=Path=/api/v1/appointments/v3/api-docs

spring.cloud.gateway.server.webflux.routes[8].id=medical-record-service-swagger
spring.cloud.gateway.server.webflux.routes[8].uri=lb://MEDICAL-RECORD-SERVICE
spring.cloud.gateway.server.webflux.routes[8].predicates[0]=Path=/api/v1/records/v3/api-docs

spring.cloud.gateway.server.webflux.routes[9].id=payment-service-swagger
spring.cloud.gateway.server.webflux.routes[9].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[9].predicates[0]=Path=/api/v1/payments/v3/api-docs

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true


# ===============================
# Distributed Tracing
# ===============================
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{traceId:-},%X{spanId:-}] - %msg%n
management.tracing.enabled=true
management.zipkin.tracing.enabled=true
management.tracing.baggage.remote-fields=service-name
spring.cloud.compatibility-verifier.enabled=false
